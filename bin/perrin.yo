                            | # Initialize registers
0x000: 30f00300000000000000 | irmovq $3, %rax     # Initialize %rax to 3
0x00a: 30f10000000000000000 | irmovq $0, %rcx     # Initialize %rcx to 0
0x014: 30f20200000000000000 | irmovq $2, %rdx     # Initialize %rdx to 2
0x01e: 30f30000000000000000 | irmovq $0, %rbx     # Initialize %rbx to 0
0x028: 30f40000000000000000 | irmovq $0, %rsp     # Initialize %rsp to 0
0x032: 30f50000000000000000 | irmovq $0, %rbp     # Initialize %rbp to 0
0x03c: 30f60000000000000000 | irmovq $0, %rsi     # Initialize %rsi to 0
0x046: 30f70000000000000000 | irmovq $0, %rdi     # Initialize %rdi to 0
0x050: 30f80000000000000000 | irmovq $0, %r8      # Initialize %r8 to 0
0x05a: 30f90000000000000000 | irmovq $0, %r9      # Initialize %r9 to 0
0x064: 30fa0000000000000000 | irmovq $0, %r10     # Initialize %r10 to 0
0x06e: 30fb0000000000000000 | irmovq $0, %r11     # Initialize %r11 to 0
0x078: 30fc0000000000000000 | irmovq $0, %r12     # Initialize %r12 to 0
0x082: 30fd0000000000000000 | irmovq $0, %r13     # Initialize %r13 to 0
0x08c: 30fe0000000000000000 | irmovq $0, %r14     # Initialize %r14 to 0
                            | 
                            | # Calculate the next 12 Perrin numbers
0x096: 6003                 | addq %rax, %rbx
0x098: 6013                 | addq %rcx, %rbx     # Calculate P(3)
0x09a: 6014                 | addq %rcx, %rsp
0x09c: 6024                 | addq %rdx, %rsp     # Calculate P(4)
0x09e: 6025                 | addq %rdx, %rbp
0x0a0: 6035                 | addq %rbx, %rbp     # Calculate P(5)
0x0a2: 6036                 | addq %rbx, %rsi
0x0a4: 6046                 | addq %rsp, %rsi     # Calculate P(6)
0x0a6: 6047                 | addq %rsp, %rdi
0x0a8: 6057                 | addq %rbp, %rdi     # Calculate P(7)
0x0aa: 6058                 | addq %rbp, %r8
0x0ac: 6068                 | addq %rsi, %r8      # Calculate P(8)
0x0ae: 6069                 | addq %rsi, %r9
0x0b0: 6079                 | addq %rdi, %r9      # Calculate P(9)
0x0b2: 607a                 | addq %rdi, %r10
0x0b4: 608a                 | addq %r8, %r10      # Calculate P(10)
0x0b6: 608b                 | addq %r8, %r11
0x0b8: 609b                 | addq %r9, %r11      # Calculate P(11)
0x0ba: 609c                 | addq %r9, %r12
0x0bc: 60ac                 | addq %r10, %r12     # Calculate P(12)
0x0be: 60ad                 | addq %r10, %r13 
0x0c0: 60bd                 | addq %r11, %r13     # Calculate P(13)
0x0c2: 60be                 | addq %r11, %r14
0x0c4: 60ce                 | addq %r12, %r14     # Calculate P(14)
                            | 
                            | # Reverse the registers
                            | 
                            | # End of program
0x0c6: 00                   | halt
